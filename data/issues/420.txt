Operator projects using the removed APIs in k8s 1.22 requires changes.

### Problem Description

Kubernetes has been deprecating API(s), which will be removed and are no longer available in 1.22. Operators projects using [these APIs](https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22) versions will **not** work on Kubernetes 1.22 or any cluster vendor using this Kubernetes version(1.22), such as OpenShift 4.9+. Following the APIs that are most likely your projects to be affected by:
- apiextensions.k8s.io/v1beta1: (Used for CRDs and available since v1.16)
- rbac.authorization.k8s.io/v1beta1: (Used for RBAC/rules and available since v1.8)
- admissionregistration.k8s.io/v1beta1 (Used for Webhooks and available since v1.16)

Therefore, looks like this project distributes solutions in the [repository](https://github.com/redhat-openshift-ecosystem/community-operators-prod/tree/main/operators/argocd-operator) and does not contain any version compatible with k8s 1.22/OCP 4.9. ([More info](https://github.com/redhat-openshift-ecosystem/community-operators-prod/discussions/138)). Following some findings by checking the distributions published:

- **argocd-operator.v0.0.13**: this distribution is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: (["applications.argoproj.io" "appprojects.argoproj.io" "argocdexports.argoproj.io" "argocds.argoproj.io"]) 
- **argocd-operator.v0.0.14**: this distribution is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: (["applications.argoproj.io" "appprojects.argoproj.io" "argocdexports.argoproj.io" "argocds.argoproj.io"]) 
- **argocd-operator.v0.0.15**: this distribution is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: (["argocdexports.argoproj.io" "argocds.argoproj.io"]) 
- **argocd-operator.v0.0.5**: this distribution is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: (["applications.argoproj.io" "appprojects.argoproj.io" "argocdexports.argoproj.io" "argocds.argoproj.io"]) 
- **argocd-operator.v0.0.8**: this distribution is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: (["applications.argoproj.io" "appprojects.argoproj.io" "argocdexports.argoproj.io" "argocds.argoproj.io"]) 
- **argocd-operator.v0.0.9**: this distribution is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: (["applications.argoproj.io" "appprojects.argoproj.io" "argocdexports.argoproj.io" "argocds.argoproj.io"]) 
- **argocd-operator.v0.0.12**: this distribution is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: (["applications.argoproj.io" "appprojects.argoproj.io" "argocdexports.argoproj.io" "argocds.argoproj.io"]) 
- **argocd-operator.v0.0.4**: this distribution is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: (["applications.argoproj.io" "appprojects.argoproj.io" "argocdexports.argoproj.io" "argocds.argoproj.io"]) 
- **argocd-operator.v0.0.6**: this distribution is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: (["applications.argoproj.io" "appprojects.argoproj.io" "argocdexports.argoproj.io" "argocds.argoproj.io"]) 
- **argocd-operator.v0.0.11**: this distribution is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: (["applications.argoproj.io" "appprojects.argoproj.io" "argocdexports.argoproj.io" "argocds.argoproj.io"]) 


**NOTE:** The above findings are only about the manifests shipped inside of the distribution. It is not checking the codebase.

### How to solve

It would be very nice to see new distributions of this project that are no longer using [these APIs](https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22) and so they can work on Kubernetes 1.22 and newer and published in the [community-operators](https://github.com/redhat-openshift-ecosystem/community-operators-prod/tree/main/operators/argocd-operator) collection. OpenShift 4.9, for example, will not ship operators anymore that do still use v1beta1 extension APIs.

Due to the number of options available to build Operators, it is hard to provide direct guidance on updating your operator to support Kubernetes 1.22. Recent versions of the [OperatorSDK](https://github.com/operator-framework/operator-sdk) greater than [1.0.0](https://github.com/operator-framework/operator-sdk/releases) and [Kubebuilder](https://github.com/kubernetes-sigs/kubebuilder) greater than [3.0.0](https://github.com/kubernetes-sigs/kubebuilder/releases) scaffold your project with the latest versions of these APIs (all that is generated by tools only). See the guides to upgrade your projects with OperatorSDK [Golang](https://sdk.operatorframework.io/docs/building-operators/golang/migration/), [Ansible](https://sdk.operatorframework.io/docs/building-operators/ansible/migration/), [Helm](https://sdk.operatorframework.io/docs/building-operators/helm/migration/) or the [Kubebuilder](https://book.kubebuilder.io/migration/v2vsv3.html) one. For APIs other than the ones mentioned above, you will have to check your code for usage of removed API versions and upgrade to newer APIs. The details of this depend on your codebase.

**If this projects only need to migrate the API for CRDs and it was built with [OperatorSDK](https://github.com/operator-framework/operator-sdk) versions lower than [1.0.0](https://github.com/operator-framework/operator-sdk/releases) then, you maybe able to solve it with an [OperatorSDK](https://github.com/operator-framework/operator-sdk) version >= v0.18.x < 1.0.0:**

> $ operator-sdk generate crds --crd-version=v1
> INFO[0000] Running CRD generator.                       
> INFO[0000] CRD generation complete.

**Alternatively, you can try to upgrade your manifests with [controller-gen](https://book.kubebuilder.io/reference/controller-gen.html) ([version >= v0.4.1](https://github.com/kubernetes-sigs/controller-tools/releases/tag/v0.4.1)) :**

#### If this project does not use Webhooks:

> $ controller-gen crd:trivialVersions=true,preserveUnknownFields=false rbac:roleName=manager-role  paths="./..."

#### If this project is using Webhooks:

1. Add the markers [sideEffects](https://github.com/kubernetes-sigs/controller-tools/blob/master/pkg/webhook/parser.go#L81) and [admissionReviewVersions](https://github.com/kubernetes-sigs/controller-tools/blob/master/pkg/webhook/parser.go#L114) to your webhook (Example with sideEffects=None and admissionReviewVersions={v1,v1beta1}: [memcached-operator/api/v1alpha1/memcached_webhook.go](https://github.com/operator-framework/operator-sdk/blob/master/testdata/go/v3/memcached-operator/api/v1alpha1/memcached_webhook.go#L39)):

2. Run the command:
> $ controller-gen crd:trivialVersions=true,preserveUnknownFields=false rbac:roleName=manager-role webhook paths="./..."

For further information and tips see the [comment](https://github.com/redhat-openshift-ecosystem/community-operators-prod/discussions/138#discussioncomment-1245759).

Hi @camilamacedo86 and thanks for the heads-up. Indeed, we noticed the `apiextensions.k8s.io/v1beta1` going away far too late.

We recently merged https://github.com/argoproj-labs/argocd-operator/pull/406, which updates the Operator SDK to a recent version and also updated our CRDs to use `apiextensions.k8s.io/v1`. Also, we do still have `Ingress` resources in another gone away API.

We plan to release v0.1.0 soon, which brings compatibility for K8s 1.22 (and therefore, OCP 4.9).
