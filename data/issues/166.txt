Support for cert-utils-operator
https://github.com/argoproj-labs/argocd-operator/blob/2f087b7f879c0b5469faeaa26b7c771b834f5d55/pkg/controller/argocd/secret.go#L85

We are attempting to setup a route a with re-encrypt so that we can use certificates generated by cert-manager with our custom enterprise CA. When adding the annotation **cert-utils-operator.redhat-cop.io/destinationCA-from-secret: "argocd-devops-ca"** cert-utlis is expecting the secret to have a key named ca.crt, but currently the key is being named tls.crt. Would it be possible to either rename the existing key to ca.crt, or create an additional key with the same value named ca.crt?
My take is that this is a failure in the cert-utils-operator.

Yes, we could add an additional key, but reading the documentation...I'm not sure why `ca.crt` was chosen over `tls.crt`.

```go
    // SecretTypeTLS contains information about a TLS client or server secret. It
    // is primarily used with TLS termination of the Ingress resource, but may be
    // used in other types.
    //
    // Required fields:
    // - Secret.Data["tls.key"] - TLS private key.
    //   Secret.Data["tls.crt"] - TLS certificate.
    // TODO: Consider supporting different formats, specifying CA/destinationCA.
    SecretTypeTLS SecretType = "kubernetes.io/tls"

    // TLSCertKey is the key for tls certificates in a TLS secert.
    TLSCertKey = "tls.crt"
    // TLSPrivateKeyKey is the key for the private key field in a TLS secret.
    TLSPrivateKeyKey = "tls.key"
```

Actually, reading more, I take that back, given that the secret generation is creating a CA secret, it totally makes sense for this fix.
